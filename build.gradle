apply plugin: 'java-library'
apply plugin: 'java'
gradle.ext.packaging = "jar"

description = """ORMLite Core"""

sourceCompatibility = 1.6
targetCompatibility = 1.6

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

dependencies {
    implementation 'org.slf4j:slf4j-api:1.7.26' //todo: convert all dependency to single string
    implementation group: 'org.slf4j', name: 'slf4j-log4j12', version:'1.7.2'
    implementation group: 'javax.persistence', name: 'persistence-api', version:'1.0'
    implementation group: 'commons-logging', name: 'commons-logging', version:'1.2'

    testImplementation group: 'junit', name: 'junit', version:'4.12'
    testImplementation group: 'org.easymock', name: 'easymock', version:'3.4'
    testImplementation group: 'com.h2database', name: 'h2', version:'1.2.128'
    testImplementation group: 'commons-lang', name: 'commons-lang', version:'2.4'
    testImplementation group: 'javax.persistence', name: 'persistence-api', version:'1.0'

    testRuntimeOnly group: 'javax.persistence', name: 'persistence-api', version:'1.0'
    testRuntimeOnly group: 'org.slf4j', name: 'slf4j-log4j12', version:'1.7.2'
    testRuntimeOnly group: 'commons-logging', name: 'commons-logging', version:'1.2'
}


//packaging tests
task packageTests(type: Jar) {
    from sourceSets.test.output
    archiveClassifier.set("tests") // classifier = 'tests'
}

artifacts.archives packageTests

configurations {
    tests
/*
    implementation {
        exclude group: 'javax.persistence-api', module: 'persistence-api'
    }
*/
}

artifacts {
    tests packageTests
}

task sourcesJar(type: Jar) {
    archiveClassifier.set("sources") //classifier 'sources'
    from sourceSets.main.allJava
}

publishToMavenLocal.dependsOn('build')
artifactoryPublish.dependsOn('build')
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            if (gradle.ext.enableSources)
                artifact (sourcesJar) {
                    classifier = 'sources'
                    //archiveClassifier.set("sources") //
                }
        }
    }
}

